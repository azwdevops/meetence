[{"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\index.js":"1","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\App.js":"2","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\reportWebVitals.js":"3","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\store.js":"4","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\reducers\\index.js":"5","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\Header.js":"6","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\Footer.js":"7","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\pages\\Home.js":"8","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\actions\\types.js":"9","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\users\\Login.js":"10","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\users\\Signup.js":"11","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\MinDialog.js":"12","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\MediumDialog.js":"13","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\reducers\\auth.js":"14","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\reducers\\shared.js":"15","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\globals.js":"16","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\actions\\shared.js":"17","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\sharedFunctions.js":"18","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\actions\\auth.js":"19","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\api\\index.js":"20","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\Sidebar.js":"21","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\scripts.js":"22","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\PrivateRoute.js":"23","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\pages\\Dashboard.js":"24","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\pages\\ActivateAccount.js":"25"},{"size":624,"mtime":1610832165358,"results":"26","hashOfConfig":"27"},{"size":1576,"mtime":1611003500080,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":311,"mtime":1610961859197,"results":"30","hashOfConfig":"27"},{"size":165,"mtime":1610891945127,"results":"31","hashOfConfig":"27"},{"size":2372,"mtime":1610974255546,"results":"32","hashOfConfig":"27"},{"size":83,"mtime":1610832520146,"results":"33","hashOfConfig":"27"},{"size":112,"mtime":1610833195948,"results":"34","hashOfConfig":"27"},{"size":368,"mtime":1610890757931,"results":"35","hashOfConfig":"27"},{"size":3105,"mtime":1610976617000,"results":"36","hashOfConfig":"27"},{"size":5451,"mtime":1610975595218,"results":"37","hashOfConfig":"27"},{"size":327,"mtime":1610839887690,"results":"38","hashOfConfig":"27"},{"size":320,"mtime":1610839880191,"results":"39","hashOfConfig":"27"},{"size":1032,"mtime":1610976850062,"results":"40","hashOfConfig":"27"},{"size":590,"mtime":1610891901396,"results":"41","hashOfConfig":"27"},{"size":131,"mtime":1610892325393,"results":"42","hashOfConfig":"27"},{"size":531,"mtime":1610968887253,"results":"43","hashOfConfig":"27"},{"size":199,"mtime":1610892618666,"results":"44","hashOfConfig":"27"},{"size":2582,"mtime":1611007116152,"results":"45","hashOfConfig":"27"},{"size":638,"mtime":1611005247674,"results":"46","hashOfConfig":"27"},{"size":2768,"mtime":1610976899753,"results":"47","hashOfConfig":"27"},{"size":549,"mtime":1610961924037,"results":"48","hashOfConfig":"27"},{"size":332,"mtime":1610963721469,"results":"49","hashOfConfig":"27"},{"size":211,"mtime":1610963644594,"results":"50","hashOfConfig":"27"},{"size":1468,"mtime":1611006672434,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"x1oizs",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\index.js",[],["106","107"],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\App.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\reportWebVitals.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\store.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\reducers\\index.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\Header.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\Footer.js",[],["108","109"],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\pages\\Home.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\actions\\types.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\users\\Login.js",["110"],"// import installed packages\r\nimport { useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport { CLOSE_LOGIN } from \"../../redux/actions/types\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\nimport { login } from \"../../redux/actions/auth\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const loginForm = useSelector((state) => state.auth.loginForm);\r\n  const alert = useSelector((state) => state.shared.alert);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // refs\r\n  const btnRef = useRef();\r\n  const formRef = useRef();\r\n\r\n  // destructuring\r\n  const { error } = globals;\r\n  const { email, password } = loginData;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(loginData)) {\r\n      return dispatch(setAlert(error, \"Email and password required\"));\r\n    }\r\n    if (btnRef.current) {\r\n      formRef.current.setAttribute(\"id\", \"pageSubmitting\");\r\n    }\r\n    setLoading(true);\r\n    // call the signup action creator\r\n    dispatch(login(loginData));\r\n\r\n    if (btnRef.current) {\r\n      formRef.current.removeAttribute(\"id\", \"pageSubmitting\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <MinDialog isOpen={loginForm}>\r\n      <form className=\"dialog\" ref={formRef}>\r\n        <h3>Login here</h3>\r\n        <p className={`response__message ${alert.alertType}`}>\r\n          {alert.status && alert.msg}\r\n        </p>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            value={email}\r\n          />\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={password}\r\n          />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={() => dispatch({ type: CLOSE_LOGIN })}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handleLogin} ref={btnRef}>\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div className=\"extra__formButtons\"></div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\users\\Signup.js",["111"],"// import installed packages\r\nimport { useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\n// import styles\r\n\r\n// import material ui items\r\n\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MediumDialog from \"../common/MediumDialog\";\r\n// import redux API\r\nimport { CLOSE_SIGNUP } from \"../../redux/actions/types\";\r\nimport { signup } from \"../../redux/actions/auth\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\n\r\nconst Signup = ({ googleSucess, googleFailure }) => {\r\n  const dispatch = useDispatch();\r\n  const signupForm = useSelector((state) => state.auth.signupForm);\r\n  const alert = useSelector((state) => state.shared.alert);\r\n\r\n  // internal state\r\n  const [loading, setLoading] = useState(false);\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  // refs\r\n  const btnRef = useRef();\r\n  const formRef = useRef();\r\n\r\n  //############### destructuring code ###################//\r\n  const {\r\n    first_name,\r\n    last_name,\r\n    username,\r\n    email,\r\n    password,\r\n    confirm_password,\r\n  } = newUser;\r\n  const { error, fillFields } = globals;\r\n\r\n  //#################end of destructuring ###########//\r\n\r\n  const handleSignup = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newUser)) {\r\n      return dispatch(setAlert(error, fillFields));\r\n    }\r\n    // confirm passwords match\r\n    if (password !== confirm_password) {\r\n      return dispatch(setAlert(error, \"Passwords should match\"));\r\n    }\r\n    if (btnRef.current) {\r\n      formRef.current.setAttribute(\"id\", \"pageSubmitting\");\r\n    }\r\n    setLoading(true);\r\n    // call the signup action creator\r\n    dispatch(signup(newUser));\r\n\r\n    // finally remove these changes\r\n    setLoading(false);\r\n    if (btnRef.current) {\r\n      formRef.current.removeAttribute(\"id\", \"pageSubmitting\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <MediumDialog isOpen={signupForm}>\r\n      <form className=\"dialog\" ref={formRef}>\r\n        <h3>Create new account</h3>\r\n        <p className={`response__message ${alert.alertType}`}>\r\n          {alert.status && alert.msg}\r\n        </p>\r\n        <div className=\"dialog__row\">\r\n          <label htmlFor=\"\" className=\"label__left\">\r\n            First Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={first_name}\r\n            className=\"input__left\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <label htmlFor=\"\" className=\"label__right\">\r\n            Last Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={last_name}\r\n            className=\"input__right\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"dialog__row\">\r\n          <label htmlFor=\"\" className=\"label__left\">\r\n            Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={username}\r\n            className=\"input__left\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <label htmlFor=\"\" className=\"label__right\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            username={email}\r\n            className=\"input__right\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"dialog__row\">\r\n          <label htmlFor=\"\" className=\"label__left\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            className=\"input__left\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <label htmlFor=\"\" className=\"label__right\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_password\"\r\n            value={confirm_password}\r\n            className=\"input__right\"\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => dispatch({ type: CLOSE_SIGNUP })}\r\n          >\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handleSignup} ref={btnRef}>\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n        <div className=\"extra__formButtons\">\r\n          <GoogleLogin\r\n            clientId=\"419209056133-go6htupj48ppega1d66bj5suhvd9f6ic.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button onClick={renderProps.onClick} className=\"google__signin\">\r\n                Sign Up With Google\r\n              </button>\r\n            )}\r\n            onSuccess={googleSucess}\r\n            onFailure={googleFailure}\r\n            cookiePolicy=\"single_host_origin\"\r\n          />\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\MinDialog.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\MediumDialog.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\reducers\\auth.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\reducers\\shared.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\globals.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\actions\\shared.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\sharedFunctions.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\redux\\actions\\auth.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\api\\index.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\components\\common\\Sidebar.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\scripts.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\shared\\PrivateRoute.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\pages\\Dashboard.js",[],"E:\\Projects\\github-mine\\node-react\\MERN-auth\\client\\src\\pages\\ActivateAccount.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":25,"column":10,"nodeType":"120","messageId":"121","endLine":25,"endColumn":17},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"no-unused-vars","'GoogleLogin' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]